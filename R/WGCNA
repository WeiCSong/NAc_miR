
source("http://bioconductor.org/biocLite.R") 
biocLite(c("AnnotationDbi", "impute", "GO.db", "preprocessCore")) 
install.packages("WGCNA")
library("WGCNA")
library(xlsx)
meta=cbind(id=c("A1","A2","B1","B2","C1","C2"),stress=c(0,0,1,1,1,1),treat=c(0,0,0,0,1,1),anhedonia=c(0,0,1,1,0,0))
datexp <- read.csv("TPM.csv",head=TRUE,row.names=1)

datexp=apply(datexp,1,as.numeric)
datexp=t(datexp)

rownames(datexp)=c("A1","A2","B1","B2","C1","C2")
powers = c(c(1:10), seq(from = 12, to=20, by=2))
sft = pickSoftThreshold(datexp, powerVector = powers, verbose = 5)
sft$powerEstimate
par(mfrow = c( 1, 2))
cex1 = 0.9
plot(sft$fitIndices[, 1], -sign(sft$fitIndices[, 3])*sft$fitIndices[, 2], xlab= "Soft Threshold (power)",ylab= "Scale Free Topology Model Fit,signed R^2",type= "n", main = paste( "Scale independence"))
text(sft$fitIndices[, 1], -sign(sft$fitIndices[, 3])*sft$fitIndices[, 2], labels=powers,cex=cex1,col= "red")
abline(h= 0.90,col= "red")
plot(sft$fitIndices[, 1], sft$fitIndices[, 5], xlab= "Soft Threshold (power)",ylab= "Mean Connectivity", type= "n", main = paste( "Mean connectivity"))
text(sft$fitIndices[, 1], sft$fitIndices[, 5], labels=powers, cex=cex1,col= "red")
net = blockwiseModules(datexp, power =20, maxBlockSize = 500, TOMType = "unsigned", minModuleSize = 20, reassignThreshold = 0, mergeCutHeight = 0.25, numericLabels = TRUE, pamRespectsDendro = FALSE, saveTOMs = TRUE, saveTOMFileBase = "AS-green-FPKM-TOM", verbose = 3)
sizeGrWindow(12, 9)
mergedColors = labels2colors(net$colors)
table(mergedColors)
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]], "Module colors", dendroLabels = FALSE, hang = 0.03, addGuide = TRUE, guideHang = 0.05)
design=model.matrix(~0+ meta[,2])
colnames(design)=levels(meta[,2])
moduleColors <- labels2colors(net$colors)
MEs0 = moduleEigengenes(datexp, moduleColors)$eigengenes
MEs = orderMEs(MEs0)
moduleTraitCor = cor(MEs, design , use = "p")
moduleTraitPvalue = corPvalueStudent(moduleTraitCor, 6)
sizeGrWindow(10,6)
textMatrix = paste(signif(moduleTraitCor, 2), "\n(",
                     signif(moduleTraitPvalue, 1), ")", sep = "")
dim(textMatrix) = dim(moduleTraitCor)
 par(mar = c(6, 8.5, 3, 3))
labeledHeatmap(Matrix = moduleTraitCor,
                 xLabels = names(design),
                 yLabels = names(MEs),
                 ySymbols = names(MEs),
                 colorLabels = FALSE,
                 colors = greenWhiteRed(50),
                 textMatrix = textMatrix,
                 setStdMargins = FALSE,
                 cex.text =1,
                 zlim = c(-1,1),
                 main = paste("Module-trait relationships"))
modNames = substring(names(MEs), 3)
geneModuleMembership = as.data.frame(cor(datexp, MEs, use = "p"))
MMPvalue = as.data.frame(corPvalueStudent(as.matrix(geneModuleMembership), 6))
names(geneModuleMembership) = paste("MM", modNames, sep="")
names(MMPvalue) = paste("p.MM", modNames, sep="")
Luminal = as.data.frame(design[,2])
names(Luminal) = "Luminal"
geneTraitSignificance = as.data.frame(cor(datexp, Luminal, use = "p"))
GSPvalue = as.data.frame(corPvalueStudent(as.matrix(geneTraitSignificance), 6))
names(geneTraitSignificance) = paste("GS.", names(Luminal), sep="")
names(GSPvalue) = paste("p.GS.", names(Luminal), sep="")
 module = "blue"
column = match(module, modNames)
moduleGenes = moduleColors==module
sizeGrWindow(7, 7)
par(mfrow = c(1,1))
verboseScatterplot(abs(geneModuleMembership[moduleGenes, column]),
                     abs(geneTraitSignificance[moduleGenes, 1]),
                     xlab = paste("Module Membership in", module, "module"),
                     ylab = "Gene significance for stress",
                     main = paste("Module membership vs. gene significance\n"),
                     cex.main =1.2, cex.lab =1.2, cex.axis =1.2, col = module)



module = "blue"
probes = colnames(datexp)
inModule = (moduleColors==module)
modProbes = probes[inModule]
write.csv(modProbes,"blue.csv")
